buildscript {
    ext.kotlin_version = '1.2.31'
    ext.ktor_version = '0.9.2'
    ext.springBootVersion = '2.0.0.RC1'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.userfeeds'
archivesBaseName = 'app'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "net.logstash.logback:logstash-logback-encoder:4.11"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-data-rest"

    compile "com.squareup.retrofit2:retrofit:2.3.0"
    compile "com.squareup.retrofit2:converter-moshi:2.3.0"
    compile "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    compile "com.squareup.okhttp3:logging-interceptor:3.9.1"
    compile "com.squareup.okhttp3:okhttp:3.9.1"
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    compile "io.reactivex.rxjava2:rxjava:2.1.7"
    compile "io.reactivex.rxjava2:rxkotlin:2.2.0"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
}


task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    from sourceSets.test.runtimeClasspath
    into 'runtime/'
}
